@model IEnumerable<Proyecto_Inge_Bases_Web.Models.Categoria>


@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutAdministrador.cshtml";
}


<div class="container" ,"mt-lg-auto"," ml-lg-auto">
    <br>
    <br>
    <h2>Administrar Categorías</h2>
    <br>
    <br>
    <p>
        @ListarArbol()

    <p>
        @Html.ActionLink("Crear nueva categoría", "Create", new { id = 0 }, null)
        <svg class="bi bi-file-plus" width="1em" height="1em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
            <path d="M9 1H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V8h-1v5a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h5V1z" />
            <path fill-rule="evenodd" d="M13.5 1a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1H13V1.5a.5.5 0 0 1 .5-.5z" />
            <path fill-rule="evenodd" d="M13 3.5a.5.5 0 0 1 .5-.5h2a.5.5 0 0 1 0 1H14v1.5a.5.5 0 0 1-1 0v-2z" />
        </svg>
    </p>


</div>

@helper ListarArbol()
{
    List<Proyecto_Inge_Bases_Web.Models.Categoria> CategoriasPrincipales = Model.Where(cat => cat.CategoriaPadreID == 0).ToList();
    foreach (var categoria in CategoriasPrincipales)
    {
        <ul id="arbol">
            @ListarArbolRec(categoria)
        </ul>

    }
}
@helper ListarArbolRec(Proyecto_Inge_Bases_Web.Models.Categoria categoria)
{
    List<Proyecto_Inge_Bases_Web.Models.Categoria> CategoriasHijos = Model.Where(cat => cat.CategoriaPadreID == categoria.CategoriaID).ToList();

    if (CategoriasHijos.Any())/*Categoria tiene subcategorias, tiene que ser despeglable*/
    {

        <span class="caret">@categoria.Nombre</span>
        <span class="float-right">
            @Html.ActionLink("Crear subcategoría", "Create", new { id = categoria.CategoriaID }, null)
            <svg class="bi bi-file-plus" width="1em" height="1em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                <path d="M9 1H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V8h-1v5a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h5V1z" />
                <path fill-rule="evenodd" d="M13.5 1a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1H13V1.5a.5.5 0 0 1 .5-.5z" />
                <path fill-rule="evenodd" d="M13 3.5a.5.5 0 0 1 .5-.5h2a.5.5 0 0 1 0 1H14v1.5a.5.5 0 0 1-1 0v-2z" />
            </svg> |

            @Html.ActionLink("Modificar", "Edit", new { id = categoria.CategoriaID })
            <svg class="bi bi-pencil-square" width="1em" height="1em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                <path d="M15.502 1.94a.5.5 0 010 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 01.707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 00-.121.196l-.805 2.414a.25.25 0 00.316.316l2.414-.805a.5.5 0 00.196-.12l6.813-6.814z" />
                <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 002.5 15h11a1.5 1.5 0 001.5-1.5v-6a.5.5 0 00-1 0v6a.5.5 0 01-.5.5h-11a.5.5 0 01-.5-.5v-11a.5.5 0 01.5-.5H9a.5.5 0 000-1H2.5A1.5 1.5 0 001 2.5v11z" clip-rule="evenodd" />
            </svg> |
            @*            Dev Dayana Marín Mayorga  Actividad Supervisada
                        Dev José Chavés Hurtado  Actividad Supervisada
                        REB22 / Subtarea: Consultar la cantidad de productos dada una categoría*@
            @if (categoria.Productoes.Count() > 0)
            {
                <a href="#" onclick="ErrorCategoriaTieneProductos();"> Borrar </a>
            }
            else
            {
                @Html.ActionLink("Borrar", "Delete", new { id = categoria.CategoriaID })
            }

            <svg class="bi bi-trash-fill" width="1em" height="1em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                <path fill-rule="evenodd" d="M2.5 1a1 1 0 00-1 1v1a1 1 0 001 1H3v9a2 2 0 002 2h6a2 2 0 002-2V4h.5a1 1 0 001-1V2a1 1 0 00-1-1H10a1 1 0 00-1-1H7a1 1 0 00-1 1H2.5zm3 4a.5.5 0 01.5.5v7a.5.5 0 01-1 0v-7a.5.5 0 01.5-.5zM8 5a.5.5 0 01.5.5v7a.5.5 0 01-1 0v-7A.5.5 0 018 5zm3 .5a.5.5 0 00-1 0v7a.5.5 0 001 0v-7z" clip-rule="evenodd" />
            </svg>
        </span>


        <hr>
        <ul class="nested">
            @foreach (var subCategoria in CategoriasHijos)
            {
                @ListarArbolRec(subCategoria);
            }
        </ul>

    }
    else /*Categoria no tiene subcategorias, no es desplegable*/
    {
        <li>
            @categoria.Nombre
            <span class="float-right">
                @Html.ActionLink("Crear subcategoría", "Create", new { id = categoria.CategoriaID }, null)
                <svg class="bi bi-file-plus" width="1em" height="1em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                    <path d="M9 1H4a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V8h-1v5a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h5V1z" />
                    <path fill-rule="evenodd" d="M13.5 1a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1H13V1.5a.5.5 0 0 1 .5-.5z" />
                    <path fill-rule="evenodd" d="M13 3.5a.5.5 0 0 1 .5-.5h2a.5.5 0 0 1 0 1H14v1.5a.5.5 0 0 1-1 0v-2z" />
                </svg> |

                @Html.ActionLink("Modificar", "Edit", new { id = categoria.CategoriaID })
                <svg class="bi bi-pencil-square" width="1em" height="1em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                    <path d="M15.502 1.94a.5.5 0 010 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 01.707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 00-.121.196l-.805 2.414a.25.25 0 00.316.316l2.414-.805a.5.5 0 00.196-.12l6.813-6.814z" />
                    <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 002.5 15h11a1.5 1.5 0 001.5-1.5v-6a.5.5 0 00-1 0v6a.5.5 0 01-.5.5h-11a.5.5 0 01-.5-.5v-11a.5.5 0 01.5-.5H9a.5.5 0 000-1H2.5A1.5 1.5 0 001 2.5v11z" clip-rule="evenodd" />
                </svg> |
                @if (categoria.Productoes.Count() > 0)
                        {
                            <a href = "#" onclick = "ErrorCategoriaTieneProductos();" > Borrar </a>
                        }
                        else
                        {
                            @Html.ActionLink("Borrar", "Delete", new { id = categoria.CategoriaID })
                        }


                <svg class="bi bi-trash-fill" width="1em" height="1em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                    <path fill-rule="evenodd" d="M2.5 1a1 1 0 00-1 1v1a1 1 0 001 1H3v9a2 2 0 002 2h6a2 2 0 002-2V4h.5a1 1 0 001-1V2a1 1 0 00-1-1H10a1 1 0 00-1-1H7a1 1 0 00-1 1H2.5zm3 4a.5.5 0 01.5.5v7a.5.5 0 01-1 0v-7a.5.5 0 01.5-.5zM8 5a.5.5 0 01.5.5v7a.5.5 0 01-1 0v-7A.5.5 0 018 5zm3 .5a.5.5 0 00-1 0v7a.5.5 0 001 0v-7z" clip-rule="evenodd" />
                </svg>

            </span>
        </li>

        <hr>
    }
}

<style>
@*css para el arbol*@
    ul, #arbol {
        list-style-type: none;
    }

    #arbol {
        margin: 0;
        padding: 0;
    }

    .caret {
        cursor: pointer;
        user-select: none;
    }

        .caret::before {
            content: ">";
            color: black;
            display: inline-block;
            margin-right: 6px;
        }

    .caret-down::before {
        transform: rotate(90deg);
    }

    .nested {
        display: none;
    }

    .active {
        display: block;
    }
</style>

<script>
    //funcion para hacer el arbol desplegable
    var toggler = document.getElementsByClassName("caret");
    var i;

    for (i = 0; i < toggler.length; i++) {
        toggler[i].addEventListener("click", function () {
            this.parentElement.querySelector(".nested").classList.toggle("active");
            this.classList.toggle("caret-down");
        });
    }
</script>
<script>

   function ErrorCategoriaTieneProductos(){
        alert("Borrado falló, no se puede borrar categorías que aún contienen productos")
    }
</script>

